<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="sudoku-with-tests"><sessioninfo id="lucka-ntb-e2ef34a9" start="1553642709907" dump="1553642714618"/><package name="sudoku"><class name="sudoku/Main" sourcefilename="Main.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printIt" desc="([[I)V" line="100"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveSudoku" desc="([[I)V" line="109"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSudokuElementObjects" desc="([[I)Ljava/util/ArrayList;" line="121"><counter type="INSTRUCTION" missed="0" covered="260"/><counter type="BRANCH" missed="6" covered="48"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="6" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSudokuMatrix" desc="(Ljava/lang/String;)[[I" line="185"><counter type="INSTRUCTION" missed="5" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="110" covered="341"/><counter type="BRANCH" missed="12" covered="52"/><counter type="LINE" missed="23" covered="61"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Main.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="8" ci="0" mb="2" cb="0"/><line nr="101" mi="10" ci="0" mb="2" cb="0"/><line nr="102" mi="14" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="11" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="8" ci="0" mb="2" cb="0"/><line nr="115" mi="10" ci="0" mb="0" cb="0"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="10" mb="0" cb="2"/><line nr="124" mi="0" ci="11" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="2"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="136" mi="0" ci="18" mb="2" cb="6"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="2"/><line nr="141" mi="0" ci="3" mb="0" cb="2"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="4"/><line nr="145" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="1" cb="3"/><line nr="148" mi="0" ci="9" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="4"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="9" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="4"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="1" cb="3"/><line nr="159" mi="0" ci="9" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="1" cb="3"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="4"/><line nr="167" mi="0" ci="9" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="1" cb="3"/><line nr="170" mi="0" ci="9" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="2"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="8" mb="0" cb="2"/><line nr="196" mi="0" ci="10" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="110" covered="341"/><counter type="BRANCH" missed="12" covered="52"/><counter type="LINE" missed="23" covered="61"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="110" covered="341"/><counter type="BRANCH" missed="12" covered="52"/><counter type="LINE" missed="23" covered="61"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></package><package name="sudoku/model"><class name="sudoku/model/Cell" sourcefilename="Cell.java"><method name="getI" desc="()I" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJ" desc="()I" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(III)V" line="17"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setActualValue" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCellPossibilities" desc="()Lsudoku/model/Possibility;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCellPossibilities" desc="(Lsudoku/model/Possibility;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActualValue" desc="()I" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/model/Square" sourcefilename="Square.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getcellsInSquare" desc="()Ljava/util/List;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printSquare" desc="()V" line="16"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addCell" desc="(Lsudoku/model/Cell;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retrieveCells" desc="()Ljava/util/List;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="20"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="6"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/model/Possibility" sourcefilename="Possibility.java"><method name="&lt;init&gt;" desc="(II)V" line="11"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getI" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJ" desc="()I" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosibilities" desc="()Ljava/util/ArrayList;" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getC" desc="()Lsudoku/model/Cell;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="77"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/model/Vertical" sourcefilename="Vertical.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="7"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRow" desc="()Ljava/util/List;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCellInVertical" desc="(I)Lsudoku/model/Cell;" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retrieveCells" desc="()Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="6"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/model/Horizontal" sourcefilename="Horizontal.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumn" desc="()Ljava/util/List;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCellInHorizontal" desc="(I)Lsudoku/model/Cell;" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retrieveCells" desc="()Ljava/util/List;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Horizontal.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="2" cb="0"/><line nr="22" mi="16" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Possibility.java"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="9" ci="0" mb="2" cb="0"/><line nr="46" mi="14" ci="0" mb="0" cb="0"/><line nr="48" mi="19" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="77"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Square.java"><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="7" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="7" ci="0" mb="2" cb="0"/><line nr="17" mi="8" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="2" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="2" cb="0"/><line nr="38" mi="7" ci="0" mb="2" cb="0"/><line nr="39" mi="16" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="9" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="20"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="6"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Vertical.java"><line nr="7" mi="5" ci="5" mb="0" cb="0"/><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="7" ci="0" mb="2" cb="0"/><line nr="29" mi="16" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="6"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Cell.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="1" cb="1"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="201" covered="174"/><counter type="BRANCH" missed="15" covered="1"/><counter type="LINE" missed="30" covered="49"/><counter type="COMPLEXITY" missed="16" covered="23"/><counter type="METHOD" missed="8" covered="23"/><counter type="CLASS" missed="0" covered="5"/></package><package name="sudoku/processing"><class name="sudoku/processing/Solution" sourcefilename="Solution.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;Ljava/util/List;[[I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="output" desc="()Ljava/util/List;" line="24"><counter type="INSTRUCTION" missed="0" covered="156"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchRow" desc="(Lsudoku/model/Possibility;)Lsudoku/model/Possibility;" line="84"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchColumn" desc="(Lsudoku/model/Possibility;)Lsudoku/model/Possibility;" line="96"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchSquare" desc="(Lsudoku/model/Possibility;)Lsudoku/model/Possibility;" line="108"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findCorrectSquare" desc="(II)Lsudoku/model/Square;" line="124"><counter type="INSTRUCTION" missed="2" covered="114"/><counter type="BRANCH" missed="12" covered="28"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="12" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findHiddenSingleInCell" desc="(Lsudoku/model/Cell;)I" line="162"><counter type="INSTRUCTION" missed="0" covered="110"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointingPairInCells" desc="(Lsudoku/model/Cell;)V" line="196"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findPartnerCell" desc="(Lsudoku/model/Cell;)Lsudoku/model/Cell;" line="207"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removePossibilityFromRow" desc="(ILsudoku/model/Cell;)V" line="226"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removePossibilityFromColumn" desc="(ILsudoku/model/Cell;)V" line="239"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removePossibilityFromSquare" desc="(ILsudoku/model/Square;)V" line="253"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="81" covered="591"/><counter type="BRANCH" missed="37" covered="83"/><counter type="LINE" missed="17" covered="116"/><counter type="COMPLEXITY" missed="29" covered="43"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/processing/Util" sourcefilename="Util.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="amountOfParticularPossibilities" desc="(Lsudoku/model/SudokuElement;)Ljava/util/Map;" line="14"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Solution.java"><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="2"/><line nr="29" mi="0" ci="7" mb="0" cb="2"/><line nr="30" mi="0" ci="7" mb="0" cb="2"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="2"/><line nr="45" mi="0" ci="14" mb="0" cb="0"/><line nr="46" mi="0" ci="14" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="2"/><line nr="52" mi="0" ci="15" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="2"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="1" cb="3"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="2"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="2"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="1" cb="1"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="2"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="2"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="1" cb="3"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="2" cb="2"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="1" cb="3"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="1" cb="3"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="2" cb="2"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="2" cb="2"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="1" cb="3"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="2" cb="2"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="11" mb="0" cb="2"/><line nr="176" mi="0" ci="15" mb="1" cb="3"/><line nr="177" mi="0" ci="13" mb="1" cb="3"/><line nr="178" mi="0" ci="11" mb="1" cb="3"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="2" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="11" ci="0" mb="2" cb="0"/><line nr="212" mi="10" ci="0" mb="4" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="26" ci="0" mb="12" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="0" cb="2"/><line nr="229" mi="0" ci="11" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="2"/><line nr="231" mi="0" ci="15" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="2"/><line nr="242" mi="0" ci="11" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="2"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="7" mb="0" cb="2"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="2"/><line nr="256" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="591"/><counter type="BRANCH" missed="37" covered="83"/><counter type="LINE" missed="17" covered="116"/><counter type="COMPLEXITY" missed="29" covered="43"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Util.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="2"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="2"/><line nr="19" mi="0" ci="9" mb="0" cb="2"/><line nr="20" mi="0" ci="7" mb="0" cb="2"/><line nr="21" mi="0" ci="11" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="24" mi="0" ci="14" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="81" covered="666"/><counter type="BRANCH" missed="37" covered="91"/><counter type="LINE" missed="17" covered="128"/><counter type="COMPLEXITY" missed="29" covered="49"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="392" covered="1181"/><counter type="BRANCH" missed="64" covered="144"/><counter type="LINE" missed="70" covered="238"/><counter type="COMPLEXITY" missed="57" covered="99"/><counter type="METHOD" missed="13" covered="39"/><counter type="CLASS" missed="0" covered="8"/></report>